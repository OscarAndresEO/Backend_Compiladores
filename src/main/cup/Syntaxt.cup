package umg.compiladores;

import java_cup.runtime.*;

terminal PUNTO_Y_COMA, SUMA, RESTA, MULTIPLICACION, DIVISION, PARENTESIS_ABRE, PARENTESIS_CIERRA, NUMERO, OPERADOR_LOGICO,
    PUNTO, MENOR_QUE, IGUAL, MAYOR_QUE, POTENCIA, DIFERENTE, MENOR_O_IGUAL, MAYOR_O_IGUAL,DO_,IF,
    FOR, INT, OUT, ELSE, LONG, FLOAT, PRINT,IN, SHORT, WHILE, STRING, SYSTEM, DOUBLE, BOOLEAN,
    PRINTLN, NUM_ENTERO, NUM_FLOAT, NUM_DOUBLE,  PUBLIC, PRIVATE, RETURN, PALABRA, UNARY_MINUS,NEXT,NEXT_INT, NEXT_FLOAT, NEXT_DOUBLE
   ;

non terminal expr_list, expr_list_tail, expr, Declaracion, Asignacion, Expresion , EstructuraSelectiva, EstructuraRepetitiva,
           ImpresionMensajes, Metodo,  RetornoDatos,  LecturaDatos, Parametros
;


precedence left SUMA, RESTA;
precedence left MULTIPLICACION;



start with expr_list;

expr_list ::= expr_list expr PUNTO_Y_COMA
            | expr PUNTO_Y_COMA
            ;

expr ::= expr SUMA expr
        | expr RESTA expr
        | expr MULTIPLICACION expr
        | PARENTESIS_ABRE expr PARENTESIS_CIERRA
        | NUMERO
        | Declaracion
        | Asignacion
        | EstructuraSelectiva
        | EstructuraRepetitiva
        | LecturaDatos
        | ImpresionMensajes
        | Metodo
        | RetornoDatos
        ;

Declaracion ::= FLOAT PALABRA
                | DOUBLE PALABRA
                | INT PALABRA
                | LONG PALABRA
                | SHORT PALABRA
                | STRING PALABRA
                | BOOLEAN PALABRA
                | FLOAT PALABRA IGUAL Expresion
                | DOUBLE PALABRA IGUAL Expresion
                | INT PALABRA IGUAL Expresion
                | LONG PALABRA IGUAL Expresion
                | SHORT PALABRA IGUAL Expresion
                | STRING PALABRA IGUAL Expresion
                | BOOLEAN PALABRA IGUAL Expresion
                ;

Asignacion ::= PALABRA IGUAL Expresion PUNTO_Y_COMA
                ;

Expresion ::= Expresion SUMA Expresion
            | Expresion RESTA Expresion
            | Expresion MULTIPLICACION Expresion
            | Expresion DIVISION Expresion
            | Expresion POTENCIA Expresion
            | PARENTESIS_ABRE Expresion PARENTESIS_CIERRA
            | MENOR_QUE Expresion
            | MAYOR_QUE Expresion
            | MENOR_O_IGUAL Expresion
            | MAYOR_O_IGUAL Expresion
            | IGUAL Expresion
            | DIFERENTE Expresion
            | Expresion OPERADOR_LOGICO Expresion
            | RESTA Expresion %prec UNARY_MINUS
            | NUMERO
            ;

EstructuraSelectiva ::= IF PARENTESIS_ABRE Expresion PARENTESIS_CIERRA "{" expr_list "}"
                        | IF PARENTESIS_ABRE Expresion PARENTESIS_CIERRA "{" expr_list "}" ELSE "{" expr_list "}"
                        | IF PARENTESIS_ABRE Expresion PARENTESIS_CIERRA "{" EstructuraSelectiva "}"
                        | IF PARENTESIS_ABRE Expresion PARENTESIS_CIERRA "{" EstructuraSelectiva "}" ELSE "{" EstructuraSelectiva "}"
                        ;

EstructuraRepetitiva ::= FOR PARENTESIS_ABRE Asignacion PUNTO_Y_COMA Expresion PUNTO_Y_COMA Asignacion PARENTESIS_CIERRA "{" expr_list "}"
                        | WHILE PARENTESIS_ABRE Expresion PARENTESIS_CIERRA "{" expr_list "}"
                        | DO_ "{" expr_list "}" WHILE PARENTESIS_ABRE Expresion PARENTESIS_CIERRA
                        ;

LecturaDatos ::= SYSTEM PUNTO OUT PUNTO PRINT PARENTESIS_ABRE "\"\"" PARENTESIS_CIERRA PUNTO_Y_COMA
                | SYSTEM PUNTO OUT PUNTO PRINTLN PARENTESIS_ABRE "\"\"" PARENTESIS_CIERRA PUNTO_Y_COMA
                | PALABRA IGUAL SYSTEM PUNTO IN PUNTO NEXT PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO_Y_COMA
                | PALABRA IGUAL SYSTEM PUNTO IN PUNTO NEXT_INT PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO_Y_COMA
                | PALABRA IGUAL SYSTEM PUNTO IN PUNTO NEXT_FLOAT PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO_Y_COMA
                | PALABRA IGUAL SYSTEM PUNTO IN PUNTO NEXT_DOUBLE PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO_Y_COMA
                ;

ImpresionMensajes ::= SYSTEM PUNTO OUT PUNTO PRINT PARENTESIS_ABRE Expresion PARENTESIS_CIERRA PUNTO_Y_COMA
                        | SYSTEM PUNTO OUT PUNTO PRINTLN PARENTESIS_ABRE Expresion PARENTESIS_CIERRA PUNTO_Y_COMA
                        ;

Metodo ::= PUBLIC PALABRA PARENTESIS_ABRE Parametros PARENTESIS_CIERRA "{" expr_list "}"
            | PRIVATE PALABRA PARENTESIS_ABRE Parametros PARENTESIS_CIERRA "{" expr_list "}"
            | PUBLIC PALABRA PARENTESIS_ABRE PARENTESIS_CIERRA "{" expr_list "}"
            | PRIVATE PALABRA PARENTESIS_ABRE PARENTESIS_CIERRA "{" expr_list "}"
            ;

Parametros ::= Declaracion
                | Parametros Declaracion
                ;

RetornoDatos ::= RETURN Expresion PUNTO_Y_COMA
                ;

expr_list ::= expr PUNTO_Y_COMA expr_list_tail
           | expr PUNTO_Y_COMA
;

expr_list_tail ::= expr PUNTO_Y_COMA expr_list_tail
                 | expr PUNTO_Y_COMA
                 | /* vac√≠o */
;

expr ::= expr SUMA expr
       | expr RESTA expr
       | expr MULTIPLICACION expr
       | PARENTESIS_ABRE expr PARENTESIS_CIERRA
       | NUMERO
       | Declaracion
       | Asignacion
       | EstructuraSelectiva
       | EstructuraRepetitiva
       | LecturaDatos
       | ImpresionMensajes
       | Metodo
       | RetornoDatos
;



%%
